import disnake
import sqlite3
from disnake import ButtonStyle
from disnake.ext import commands
from disnake.ui import View, Button
from disnake.ext.commands import has_permissions
from datetime import datetime, timezone, timedelta


with sqlite3.connect("database (Hell).db") as db:
    cursor = db.cursor()

    class Moderation(commands.Cog):

        def __init__(self, bot):
            self.bot = bot

        async def check_status_personal(self, member):
            if member.status == disnake.Status.offline:
                return '<:offline:892647180559597568>'
            if member.status == disnake.Status.online:
                return '<:online:892647180614123540>'
            if member.status == disnake.Status.dnd:
                return '<:dnd:893597424579391529>'
            if member.status == disnake.Status.idle:
                return '<:idle:893597436155691038>'

        @commands.slash_command(name="clear",
                                description="–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π",
                                guild_ids=[614081676116754465],
                                options=[disnake.Option(name="–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
                                                        description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π",
                                                        type=disnake.OptionType.integer)])
        @has_permissions(manage_messages=True)
        async def clear(self, ctx, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ=1):
            guild_tc = self.bot.get_guild(614081676116754465)

            now = datetime.now(timezone(timedelta(hours=+3)))

            if ctx.guild == guild_tc:
                channel_logs = self.bot.get_channel(1025836634069008395)

            end_embed = disnake.Embed(
                title="–ß–∞—Ç –±—ã–ª –æ—á–∏—â–µ–Ω",
                description=f"–ë—ã–ª–æ –æ—á–∏—â–µ–Ω–æ **{–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ}** —Å–æ–æ–±—â–µ–Ω–∏–π.",
                color=0x2f3136,
                timestamp=now)
            end_embed.set_footer(text=ctx.author)

            logs = disnake.Embed(
                title="–ß–∞—Ç –±—ã–ª –æ—á–∏—â–µ–Ω",
                description=f"–ë—ã–ª–æ –æ—á–∏—â–µ–Ω–æ **{–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ}** —Å–æ–æ–±—â–µ–Ω–∏–π!",
                color=0x2f3136,
                timestamp=now)
            logs.set_footer(text=ctx.author)

            if –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ < 0 or –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ == 0:
                await ctx.send(content="–ù–µ–ª—å–∑—è —É–∫–∞–∑—ã–≤–∞—Ç—å —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –Ω—É–ª—è.", ephemeral=True)
                return

            if –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ > 500:
                await ctx.send(content="–ù–µ–ª—å–∑—è —É–∫–∞–∑—ã–≤–∞—Ç—å —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –ø—è—Ç–∏—Å–æ—Ç.", ephemeral=True)
                return

            await ctx.send(content="–ü—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—à—ë–ª...", ephemeral=True)
            msg = await ctx.original_message()
            await ctx.channel.purge(limit=–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
            await msg.edit(content="–ü—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ.")
            await ctx.channel.send(embed=end_embed, delete_after=25)
            await channel_logs.send(embed=logs)

        @commands.slash_command(
            name="mute", description="–ú—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", guild_ids=[614081676116754465], options=[
                disnake.Option(
                    name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", description="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", type=disnake.OptionType.user, required=True), disnake.Option(
                        name="–≤—Ä–µ–º—è", description="–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è", type=disnake.OptionType.integer, required=True), disnake.Option(
                            name="–µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏", description="–£–∫–∞–∂–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏", choices=[
                                disnake.OptionChoice(
                                    name="—Å–µ–∫—É–Ω–¥—ã", value="seconds"), disnake.OptionChoice(
                                        name="–º–∏–Ω—É—Ç—ã", value="minutes"), disnake.OptionChoice(
                                            name="—á–∞—Å—ã", value="hours"), disnake.OptionChoice(
                                                name="–¥–Ω–∏", value="days")], required=True), disnake.Option(
                                                    name="–ø—Ä–∏—á–∏–Ω–∞", description="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É", type=disnake.OptionType.string, required=True)])
        @has_permissions(moderate_members=True)
        async def mute(self, ctx, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: disnake.Member, –≤—Ä–µ–º—è: int, –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏: str, *, –ø—Ä–∏—á–∏–Ω–∞):
            perms_owner = cursor.execute(f"""SELECT * FROM perms WHERE user_id = {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id} AND lvl_rights = 'OWN'""").fetchone()
            perms_dev = cursor.execute(f"""SELECT * FROM perms WHERE user_id = {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id} AND lvl_rights = 'DEV'""").fetchone()

            guild_tc = self.bot.get_guild(614081676116754465)

            now = datetime.now(timezone(timedelta(hours=+3)))

            out_seconds_ = (datetime.now() + timedelta(seconds=–≤—Ä–µ–º—è)).timestamp()
            out_seconds = f'<t:{round(out_seconds_,0)}:R>'.replace(".0", "")

            out_minutes_ = (
                datetime.now() +
                timedelta(
                    seconds=–≤—Ä–µ–º—è *
                    60)).timestamp()
            out_minutes = f'<t:{round(out_minutes_,0)}:R>'.replace(".0", "")

            out_hours_ = (
                datetime.now() +
                timedelta(
                    seconds=–≤—Ä–µ–º—è *
                    60 *
                    60)).timestamp()
            out_hours = f'<t:{round(out_hours_,0)}:R>'.replace(".0", "")

            out_days_ = (
                datetime.now() +
                timedelta(
                    seconds=–≤—Ä–µ–º—è *
                    60 *
                    60 *
                    24)).timestamp()
            out_days = f'<t:{round(out_days_,0)}:R>'.replace(".0", "")

            if ctx.guild == guild_tc:
                channel_logs = self.bot.get_channel(1025836634069008395)

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.current_timeout is not None:
                await ctx.send(content=f"{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} —É–∂–µ –∑–∞–≥–ª—É—à–µ–Ω.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id == ctx.guild.owner.id:
                await ctx.send(content=f"{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} —è–≤–ª—è–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.", ephemeral=True)
                return

            if perms_owner is not None or perms_dev is not None:
                await ctx.send(content="–†–∞–∑—Ä–∞–± –∑–∞–ø—Ä–µ—Ç–∏–ª –º–Ω–µ –µ–≥–æ –º—É—Ç–∏—Ç—å.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.guild_permissions.administrator:
                await ctx.send(content=f"–Ø –Ω–µ –º–æ–≥—É –∑–∞–º—É—Ç–∏—Ç—å {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} —Ç–∞–∫ –∫–∞–∫ —É –Ω–µ–≥–æ –ø—Ä–∞–≤–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id == ctx.guild.me.id:
                await ctx.send(content="–°–ª—É—à–∞–π—Ç–µ, —è –º—É—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è –Ω–µ —Å–æ–±–∏—Ä–∞—é—Å—å.", ephemeral=True)
                return

            if ctx.author.top_role.position < –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.top_role.position:
                await ctx.send(content="–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–º—É—Ç–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ —Å —Ä–æ–ª—å—é –≤—ã—à–µ —Ç–≤–æ–µ–π –∏–ª–∏ —Ç–∞–∫–æ–π –∂–µ –∫–∞–∫ —É —Ç–µ–±—è.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id == ctx.author.id:
                await ctx.send(content="–Ø –Ω–µ –¥–∞–º —Ç–µ–±–µ –∑–∞–º—É—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.top_role > ctx.guild.me.top_role:
                await ctx.send(content=f"–Ø –Ω–µ –º–æ–≥—É –∑–∞–º—É—Ç–∏—Ç—å {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ —Ä–æ–ª—å –≤—ã—à–µ –º–æ–µ–π.", ephemeral=True)
                return

            if –≤—Ä–µ–º—è > 28 and –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏ == "days" or –≤—Ä–µ–º—è > 672 and –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏ == "hours" or –≤—Ä–µ–º—è > 40320 and –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏ == "minutes" or –≤—Ä–µ–º—è > 2419200 and –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏ == "seconds":
                await ctx.send(content="–ù–µ–ª—å–∑—è –º—É—Ç–∏—Ç—å –Ω–∞ 24 –¥–Ω—è –∏ –±–æ–ª–µ–µ.", ephemeral=True)
                return

            emb = disnake.Embed(
                title="–ú—É—Ç –±—ã–ª –≤—ã–¥–∞–Ω",
                description=f"–ü—Ä–∏—á–∏–Ω–∞: {–ø—Ä–∏—á–∏–Ω–∞}",
                color=0x2f3136,
                timestamp=now)
            emb.set_footer(text=ctx.author)
            emb.add_field(
                name="–ù–∞—Ä—É—à–∏—Ç–µ–ª—å",
                value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention)

            emb_user_button = View()
            emb_user_button.add_item(
                Button(
                    style=ButtonStyle.grey,
                    emoji="üì®",
                    label=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å {ctx.guild}",
                    disabled=True))

            emb_user = disnake.Embed(
                title="–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –º—É—Ç",
                description=f"–ü—Ä–∏—á–∏–Ω–∞: {–ø—Ä–∏—á–∏–Ω–∞}",
                color=0x2f3136,
                timestamp=now)
            emb_user.set_footer(text=f"–ó–∞–≥–ª—É—à–∏–ª: {ctx.author}")

            logs = disnake.Embed(
                title="–ú—É—Ç –±—ã–ª –≤—ã–¥–∞–Ω",
                description=f"–ü—Ä–∏—á–∏–Ω–∞: {–ø—Ä–∏—á–∏–Ω–∞}",
                color=0x2f3136,
                timestamp=now)
            logs.set_footer(text=ctx.author)
            logs.add_field(
                name="–ù–∞—Ä—É—à–∏—Ç–µ–ª—å",
                value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention)

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.voice is not None:
                if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.voice.channel is not None:
                    await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.move_to(None)

            if –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏ == "seconds":
                emb.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_seconds}")
                emb_user.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_seconds}")
                logs.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_seconds}")

                await ctx.guild.timeout(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, duration=–≤—Ä–µ–º—è, reason=f"{ctx.author}: {–ø—Ä–∏—á–∏–Ω–∞}")
            if –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏ == "minutes":
                emb.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_minutes}")
                emb_user.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_minutes}")
                logs.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_minutes}")

                await ctx.guild.timeout(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, duration=–≤—Ä–µ–º—è*60, reason=f"{ctx.author}: {–ø—Ä–∏—á–∏–Ω–∞}")
            if –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏ == "hours":
                emb.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_hours}")
                emb_user.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_hours}")
                logs.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_hours}")

                await ctx.guild.timeout(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, duration=–≤—Ä–µ–º—è*60*60, reason=f"{ctx.author}: {–ø—Ä–∏—á–∏–Ω–∞}")
            if –µ–¥–Ω–∏–Ω–∏—Ü–∞_–≤—Ä–µ–º–µ–Ω–∏ == "days":
                emb.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_days}")
                emb_user.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_days}")
                logs.add_field(
                    name="–†–∞–∑–º—É—Ç",
                    value=f"{out_days}")

                await ctx.guild.timeout(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, duration=–≤—Ä–µ–º—è*60*60*24, reason=f"{ctx.author}: {–ø—Ä–∏—á–∏–Ω–∞}")

            await ctx.send(embed=emb)
            try:
                await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.send(embed=emb_user, view=emb_user_button)
            except BaseException:
                pass
            await channel_logs.send(embed=logs)

        @commands.slash_command(name="unmute",
                                description="–†–∞–∑–º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                                guild_ids=[614081676116754465],
                                options=[disnake.Option(name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                                                        description="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                                                        type=disnake.OptionType.user,
                                                        required=True)])
        @has_permissions(moderate_members=True)
        async def unmute(self, ctx, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: disnake.Member):
            guild_tc = self.bot.get_guild(614081676116754465)

            now = datetime.now(timezone(timedelta(hours=+3)))

            if ctx.guild == guild_tc:
                channel_logs = self.bot.get_channel(1025836634069008395)

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.current_timeout is not None:
                if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id == ctx.author.id:
                    await ctx.send(content="–Ø –Ω–µ –¥–∞–º —Ç–µ–±–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.", ephemeral=True)
                    return

                emb = disnake.Embed(
                    title="–†–∞–∑–º—É—Ç –±—ã–ª –≤—ã–¥–∞–Ω",
                    color=0x2f3136,
                    timestamp=now)
                emb.set_footer(text=ctx.author)
                emb.add_field(
                    name="–†–∞–∑–≥–ª—É—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                    value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention)

                emb_user_button = View()
                emb_user_button.add_item(
                    Button(
                        style=ButtonStyle.grey,
                        emoji="üì®",
                        label=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å {ctx.guild}",
                        disabled=True))

                emb_user = disnake.Embed(
                    title="–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω —Ä–∞–∑–º—É—Ç",
                    color=0x2f3136,
                    timestamp=now)
                emb_user.set_footer(text=f"–ó–∞–≥–ª—É—à–∏–ª: {ctx.author}")

                logs = disnake.Embed(
                    title="–†–∞–∑–º—É—Ç –±—ã–ª –≤—ã–¥–∞–Ω",
                    color=0x2f3136,
                    timestamp=now)
                logs.set_footer(text=ctx.author)
                logs.add_field(
                    name="–†–∞–∑–≥–ª—É—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                    value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention)

                await ctx.guild.timeout(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, duration=None, reason=f"{ctx.author}")
                await ctx.send(embed=emb)
                try:
                    await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.send(embed=emb_user, view=emb_user_button)
                except BaseException:
                    pass
                await channel_logs.send(embed=logs)
            else:
                await ctx.send(content="–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º—É—Ç–µ.", ephemeral=True)


        @commands.slash_command(name="ban",
                                description="–ü–µ—Ä–º–∞–º–µ–Ω—Ç–Ω—ã–π –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                                guild_ids=[614081676116754465],
                                options=[disnake.Option(name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                                                        description="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                                                        type=disnake.OptionType.user,
                                                        required=True),
                                        disnake.Option(name="–ø—Ä–∏—á–∏–Ω–∞",
                                                    description="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É",
                                                    type=disnake.OptionType.string,
                                                    required=True)])
        @has_permissions(ban_members=True)
        async def permamentban(self, ctx, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: disnake.Member, *, –ø—Ä–∏—á–∏–Ω–∞):
            perms_owner = cursor.execute(f"""SELECT * FROM perms WHERE user_id = {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id} AND lvl_rights = 'OWN'""").fetchone()
            perms_dev = cursor.execute(f"""SELECT * FROM perms WHERE user_id = {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id} AND lvl_rights = 'DEV'""").fetchone()

            guild_tc = self.bot.get_guild(614081676116754465)

            now = datetime.now(timezone(timedelta(hours=+3)))

            if ctx.guild == guild_tc:
                channel_logs = self.bot.get_channel(1025836634069008395)
                
            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id == ctx.guild.owner.id:
                await ctx.send(content=f"{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} —è–≤–ª—è–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.", ephemeral=True)
                return

            if perms_owner is not None or perms_dev is not None:
                await ctx.send(content="–†–∞–∑—Ä–∞–± –∑–∞–ø—Ä–µ—Ç–∏–ª –º–Ω–µ –µ–≥–æ –º—É—Ç–∏—Ç—å.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.guild_permissions.administrator:
                await ctx.send(content=f"–Ø –Ω–µ –º–æ–≥—É –∑–∞–±–∞–Ω–∏—Ç—å {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} —Ç–∞–∫ –∫–∞–∫ —É –Ω–µ–≥–æ –ø—Ä–∞–≤–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id == ctx.guild.me.id:
                await ctx.send(content="–°–ª—É—à–∞–π—Ç–µ, —è –±–∞–Ω–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è –Ω–µ —Å–æ–±–∏—Ä–∞—é—Å—å.", ephemeral=True)
                return

            if ctx.author.top_role.position < –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.top_role.position:
                await ctx.send(content="–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–±–∞–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ —Å —Ä–æ–ª—å—é –≤—ã—à–µ —Ç–≤–æ–µ–π –∏–ª–∏ —Ç–∞–∫–æ–π –∂–µ –∫–∞–∫ —É —Ç–µ–±—è.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id == ctx.author.id:
                await ctx.send(content="–Ø –Ω–µ –¥–∞–º —Ç–µ–±–µ –∑–∞–±–∞–Ω–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.", ephemeral=True)
                return

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.top_role > ctx.guild.me.top_role:
                await ctx.send(content=f"–Ø –Ω–µ –º–æ–≥—É –∑–∞–±–∞–Ω–∏—Ç—å {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ —Ä–æ–ª—å –≤—ã—à–µ –º–æ–µ–π.", ephemeral=True)
                return

            emb = disnake.Embed(
                title="–ü–µ—Ä–º–∞–º–µ–Ω—Ç–Ω—ã–π –±–∞–Ω –±—ã–ª –≤—ã–¥–∞–Ω",
                description=f"–ü—Ä–∏—á–∏–Ω–∞: {–ø—Ä–∏—á–∏–Ω–∞}",
                color=0x2f3136,
                timestamp=now)
            emb.set_footer(text=ctx.author)
            emb.add_field(
                name="–ù–∞—Ä—É—à–∏—Ç–µ–ª—å",
                value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention)

            emb_user_button = View()
            emb_user_button.add_item(
                Button(
                    style=ButtonStyle.grey,
                    emoji="üì®",
                    label=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å {ctx.guild}",
                    disabled=True))

            emb_user = disnake.Embed(
                title="–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –ø–µ—Ä–º–∞–º–µ–Ω—Ç–Ω—ã–π –±–∞–Ω",
                description=f"–ü—Ä–∏—á–∏–Ω–∞: {–ø—Ä–∏—á–∏–Ω–∞}",
                color=0x2f3136,
                timestamp=now)
            emb_user.set_footer(text=f"–ó–∞–±–∞–Ω–∏–ª: {ctx.author}")

            logs = disnake.Embed(
                title="–ü–µ—Ä–º–∞–º–µ–Ω—Ç–Ω—ã–π –±–∞–Ω –±—ã–ª –≤—ã–¥–∞–Ω",
                description=f"–ü—Ä–∏—á–∏–Ω–∞: {–ø—Ä–∏—á–∏–Ω–∞}",
                color=0x2f3136,
                timestamp=now)
            logs.set_footer(text=ctx.author)
            logs.add_field(
                name="–ù–∞—Ä—É—à–∏—Ç–µ–ª—å",
                value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention)

            await ctx.guild.ban(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, reason=f"{ctx.author}: {–ø—Ä–∏—á–∏–Ω–∞}")
            try:
                await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.send(embed=emb_user, view=emb_user_button)
            except BaseException:
                pass
            await ctx.send(embed=emb)
            await channel_logs.send(embed=logs)

        @commands.slash_command(name="unban",
                                description="–ü–µ—Ä–º–∞–º–µ–Ω—Ç–Ω—ã–π —Ä–∞–∑–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                                guild_ids=[614081676116754465],
                                options=[disnake.Option(name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                                                        description="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                                                        type=disnake.OptionType.user,
                                                        required=True)])
        @has_permissions(ban_members=True)
        async def unpermamentban(self, ctx, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: disnake.Member):
            guild_tc = self.bot.get_guild(614081676116754465)

            now = datetime.now(timezone(timedelta(hours=+3)))
            banned_users = await ctx.guild.bans(limit=123).flatten()

            if ctx.guild == guild_tc:
                channel_logs = self.bot.get_channel(1025836634069008395)

            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id == ctx.guild.me.id:
                await ctx.send(content="–°–ª—É—à–∞–π—Ç–µ, —è –∫ –≤–∞—à–µ–º—É –≤–µ–ª–∏–∫–æ–º—É —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –±–∞–Ω–µ –Ω–µ –Ω–∞—Ö–æ–∂—É—Å—å.", ephemeral=True)
                return

            emb = disnake.Embed(
                title="–ü–µ—Ä–º–∞–º–µ–Ω—Ç–Ω—ã–π —Ä–∞–∑–±–∞–Ω –±—ã–ª –≤—ã–¥–∞–Ω",
                color=0x2f3136,
                timestamp=now)
            emb.set_footer(text=ctx.author)
            emb.add_field(
                name="–†–∞–∑–±–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention)

            emb_user_button = View()
            emb_user_button.add_item(
                Button(
                    style=ButtonStyle.grey,
                    emoji="üì®",
                    label=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å {ctx.guild}",
                    disabled=True))

            emb_user = disnake.Embed(
                title="–í–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –ø–µ—Ä–º–∞–º–µ–Ω—Ç–Ω—ã–π —Ä–∞–∑–±–∞–Ω",
                color=0x2f3136,
                timestamp=now)
            emb_user.set_footer(text=f"–†–∞–∑–±–∞–Ω–∏–ª: {ctx.author}")

            logs = disnake.Embed(
                title="–ü–µ—Ä–º–∞–º–µ–Ω—Ç–Ω—ã–π —Ä–∞–∑–±–∞–Ω –±—ã–ª –≤—ã–¥–∞–Ω",
                color=0x2f3136,
                timestamp=now)
            logs.set_footer(text=ctx.author)
            logs.add_field(
                name="–†–∞–∑–±–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention)

            for member in banned_users:
                member = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

                try:
                    await ctx.guild.unban(member, reason=f"–í—ã–¥–∞–ª —Ä–∞–∑–±–∞–Ω: {ctx.author}")
                    try:
                        await member.send(embed=emb_user, view=emb_user_button)
                    except BaseException:
                        pass
                    await ctx.send(embed=emb)
                    await channel_logs.send(embed=logs)
                    return
                except BaseException:
                    await ctx.send(content="–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–µ—Ä–º–∞–º–µ–Ω—Ç–Ω–æ–º –±–∞–Ω–µ.", ephemeral=True)
                    return

        @commands.slash_command(name="staff",
                                description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–Ω–ª–∞–π–Ω –ü–µ—Ä—Å–æ–Ω–∞–ª–∞ Discord",
                                guild_ids=[614081676116754465])
        async def stafflist(self, ctx):
            guild_tc = self.bot.get_guild(614081676116754465)

            sostav = []

            if ctx.guild == guild_tc:
                discord_lead_role = disnake.utils.get(ctx.guild.roles, id=813671668442333184)
                admin_discord_role = disnake.utils.get(ctx.guild.roles, id=813387947733680210)
                security_discord_role = disnake.utils.get(ctx.guild.roles, id=813365784487133204)
                moder_discord_role = disnake.utils.get(ctx.guild.roles, id=813385204059865108)
                assistant_discord_role = disnake.utils.get(ctx.guild.roles, id=813363055626289152)

                for member in discord_lead_role.members:
                    sostav.append(f'{await self.check_status_personal(member)} **`{member}`** <a:tochka_anim1:978740315676631092> {discord_lead_role.mention}')

                for member in admin_discord_role.members:
                    sostav.append(f'{await self.check_status_personal(member)} **`{member}`** <a:tochka_anim1:978740315676631092> {admin_discord_role.mention}')
                
                for member in security_discord_role.members:
                    sostav.append(f'{await self.check_status_personal(member)} **`{member}`** <a:tochka_anim1:978740315676631092> {security_discord_role.mention}')

                for member in moder_discord_role.members:
                    sostav.append(f'{await self.check_status_personal(member)} **`{member}`** <a:tochka_anim1:978740315676631092> {moder_discord_role.mention}')
                
                for member in assistant_discord_role.members:
                    sostav.append(f'{await self.check_status_personal(member)} **`{member}`** <a:tochka_anim1:978740315676631092> {assistant_discord_role.mention}')
            
            personal = f'{str(sostav)}'.replace('[', '').replace(']', '').replace(',', '\n').replace("'", "").replace('"', '')
                
            embed_end = disnake.Embed(
                title="–ü–µ—Ä—Å–æ–Ω–∞–ª —Å–µ—Ä–≤–µ—Ä–∞",
                description=f"{personal}",
                color=0x2f3136)
            embed_end.set_image(
                url="https://cdn.discordapp.com/attachments/834837020056616992/992091846257950782/typo_staff.gif")

            await ctx.response.defer()
            await ctx.send(embed=embed_end)

        @commands.slash_command(name="sos",
                                description="–°–æ–æ–±—â–∏—Ç—å –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞",
                                guild_ids=[614081676116754465],
                                options=[disnake.Option(name="–ø—Ä–∏—á–∏–Ω–∞",
                                                        description="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É",
                                                        type=disnake.OptionType.string,
                                                        required=True)])
        @commands.cooldown(1, 3600, commands.BucketType.user)
        async def sos(self, ctx, *, –ø—Ä–∏—á–∏–Ω–∞):
            guild_tc = self.bot.get_guild(614081676116754465)

            emb = disnake.Embed(
                color=0x2f3136,
                title="–ù–∞–π–¥–µ–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ",
                description=f"–ù–∞—Ä—É—à–µ–Ω–∏–µ: {–ø—Ä–∏—á–∏–Ω–∞}")
            emb.set_footer(text=f"–í—ã–∑–≤–∞–ª: {ctx.author}")
            emb.set_image(url="https://images-ext-2.discordapp.net/external/zvx2Ey8dUmAmYJcRDNGs68xxjrivhcXMsCJOLpFTLUM/https/i.pinimg.com/originals/9e/45/f4/9e45f4a736e361f369a1e7dd1378c6e1.gif")

            if ctx.guild == guild_tc:
                discord_team_role = disnake.utils.get(ctx.guild.roles, id=825112987446673488)

                await ctx.send(content="–ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ.", ephemeral=True)
                await ctx.channel.send(content=discord_team_role.mention, embed=emb)

def setup(bot):
    bot.add_cog(Moderation(bot))